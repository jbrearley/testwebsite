{"version":3,"sources":["components/Header/NavItem/NavItem.js","components/Header/Header.js","components/Banner/Banner.js","containers/Home/Home.js","components/Timeline/Timeline.js","containers/Experience/Experience.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["NavItem","props","className","to","link","exact","activeClassName","children","Header","useState","burgerMenuToggled","setBurgerMenuToggled","onClick","Banner","href","target","rel","style","color","Home","Fragment","TimelineComp","lineColor","key","dateText","dateInnerStyle","background","bodyContainerStyle","padding","borderRadius","boxShadow","Experience","withRouter","App","routes","path","component","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.671f9404.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './NavItem.scss';\n\nconst NavItem = props => (\n  <li className='nav-item'>\n    <NavLink\n      to={props.link}\n      exact={props.exact}\n      activeClassName='nav-item active'\n    >\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default NavItem;","import React, { useState } from 'react';\nimport './Header.scss';\nimport NavItem from './NavItem/NavItem';\n\nconst Header = () => {\n  const [burgerMenuToggled, setBurgerMenuToggled] = useState(false);\n\n  return (\n    <header>\n      <div className='wrapper'>\n        <nav>\n          <h3>JOSH BREARLEY</h3>\n          <div\n            className='burger'\n            onClick={() => {\n              setBurgerMenuToggled(!burgerMenuToggled);\n            }}\n          >\n            <div\n              className={burgerMenuToggled ? 'line modified-line-01' : 'line'}\n            ></div>\n            <div\n              className={burgerMenuToggled ? 'line modified-line-02' : 'line'}\n            ></div>\n            <div\n              className={burgerMenuToggled ? 'line modified-line-03' : 'line'}\n            ></div>\n          </div>\n          <ul\n            className={burgerMenuToggled ? 'nav-list open' : 'nav-list'}\n            onClick={() => {\n              setBurgerMenuToggled(false);\n            }}\n          >\n            <NavItem link='/' exact>\n              Home\n            </NavItem>\n            <NavItem link='/experience' exact>\n              Experience\n            </NavItem>\n            <NavItem link='/projects' exact> \n              Projects\n            </NavItem>\n            <NavItem link='/events' exact> \n              Events\n            </NavItem>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport './Banner.scss';\n\nconst Banner = () => {\n  return (\n    <section className='section-banner'>\n      <div className='wrapper flex to-end'>\n        <ul className='banner-ul'>\n          <li>\n            <a\n              href='https://www.linkedin.com/in/josh-brearley-4a2b04187/'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <i\n                className='fab fa-linkedin fa-lg banner-fa-res'\n                style={{ color: '#1DA1F1' }}\n              ></i>\n            </a>\n          </li>\n          <li>\n            <a\n              href='https://github.com/jbrearley'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <i className='fab fa-github fa-lg'></i>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;","import React from 'react';\n\nimport Banner from '../../components/Banner/Banner';\nimport './Home.scss';\n\nfunction Home() {\n  return (\n    <React.Fragment>\n      <Banner />\n      <section className='section'>\n        <div className='wrapper'>\n          <article className='home-container'>\n            <h2>Test Website - Learning purposes only.</h2>\n            <p>\n                I am currently training to become a JavaScript engineer at Code Nation & have aquired the following skills; HTML5,\n                CSS, JavaScript, ReactJS & Git. \n              Diverse set of skills ranging from; HTML5, CSS/SCSS(Sass),\n              JavaScript (Express, Node.js, Angular.js, Vue.js, React.js\n              (Redux), TypeScript) jQuery, Python, AWS, PHP, SQL, and basic\n              knowledge of other languages...\n            </p>\n          </article>\n        </div>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nimport './Timeline.scss';\n \nconst TimelineComp = () => {\n  return (\n    <Timeline lineColor={'#ddd'}>\n      <TimelineItem\n        key='001'\n        dateText='Feb 2020 – Present'\n        dateInnerStyle={{ background: '#2c4d6e', color: '#fff' }}\n      >\n        <h3 className='padding-bottom-sm'>\n          Junior Developer in Training, Code Nation\n        </h3>\n        <p>\n          • Learning the fundamentals of frontend & backend development including but not limited to; HTML5, CSS3, JavaScript,\n          ReactJS, MongoDB, SQL & Git. Training to understand & build reusable, scalable code to ensure readiness for a corperate \n          setting once graduated. (Graduation date may be affected by Covid-19). \n        </p>\n        <p>\n          • Specialising in ReactJS. \n        </p>\n        <p>\n          • Articles on my journey into tech with code nation can be found <a href=\"https://www.linkedin.com/in/josh-brearley-4a2b04187/detail/recent-activity/posts/\"> \n          here.</a>\n        </p>\n      </TimelineItem>\n      <TimelineItem\n        key='002'\n        dateText='July 2019 – Jan 2020'\n        dateInnerStyle={{ background: '#2c4d6e', color: '#fff' }}\n        bodyContainerStyle={{\n          background: '#ddd',\n          padding: '20px',\n          borderRadius: '8px',\n          boxShadow: '0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2)'\n        }}\n      >\n        <h3 className='padding-bottom-sm'>IT Recruitment Consultant, Maxwell Bond</h3>\n        <h4>JavaScript/.Net/PHP</h4>\n        <p>\n          • Originally started out in the .Net market before moving over to frontend. References can be found on my Linked In page.\n        </p>\n      </TimelineItem>\n      <TimelineItem\n        key='003'\n        dateText='Sep 2016 – July 2019'\n        dateInnerStyle={{ background: '#2c4d6e', color: '#fff' }}\n      >\n        <h3 className='padding-bottom-sm'>\n          Bachelor's Degree, Business Administration, Management & Operations.\n        </h3>\n        <h4>The Manchester Metropolitan University | 2:1</h4>\n        <p>• Covered Globalisation, Administration, Entrepreneurship, Accountancy & Finance, Economics, Business & Technology.\n        </p>\n      </TimelineItem>\n      <TimelineItem\n        key='004'\n        dateText='Sep 2014 –  June 2016'\n        dateInnerStyle={{ background: '#2c4d6e', color: '#fff' }}\n        bodyContainerStyle={{\n          background: '#ddd',\n          padding: '20px',\n          borderRadius: '8px',\n          boxShadow: '0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2)'\n        }}\n      >\n        <h3 className='padding-bottom-sm'>\n          Business Studies, Economics & Accountancy. \n        </h3>\n        <h4>Runshaw College</h4>\n        <p>• Achieved A, A, A.</p>\n      </TimelineItem>\n      <TimelineItem\n        key='005'\n        dateText='2008 – 2013'\n        dateInnerStyle={{ background: '#2c4d6e', color: '#fff' }}\n      >\n        <h3 className='padding-bottom-sm'>\n          Parklands Academy\n        </h3>\n        <p>\n          GCSE: \n          • English – A \n          • Maths - A \n          • Science – C \n          • ICT - A \n          • Graphics - C \n          • R.E - A \n          • Music - C \n        </p>\n      </TimelineItem>\n    </Timeline>\n  );\n};\n\nexport default TimelineComp;","import React from 'react';\nimport './Experience.scss';\nimport Banner from '../../components/Banner/Banner';\nimport Timeline from '../../components/Timeline/Timeline';\n\nconst Experience = () => {\n  return (\n    <React.Fragment>\n      <Banner />\n      <section className='section experience-section'>\n        <div className='wrapper'>\n          <article className='center-mb'>\n            <h1>Experience</h1>\n            {/*\n            <p>\n              Feel free to toggle between two different layouts of my experience\n            </p>\n             <div className='toggle'>\n              <input type='checkbox' className='check' />\n              <b className='b switch'></b>\n              <b className='b track'></b>\n            </div> */}\n          </article>\n          <article className='timeline-container'>\n            <Timeline />\n          </article>\n        </div>\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default Experience;","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Footer.scss';\n\nconst Footer = () => (\n  <footer>\n    <div className='wrapper flex footer-container'>\n      <article>\n        <h4 className='footer-header'>Site</h4>\n        <ul>\n          <li>\n            <Link to='/'>Home</Link>\n          </li>\n          <li>\n            <Link to='/experience'>Experience</Link>\n          </li>\n          <li>\n            <Link to='/projects'>Projects</Link>\n          </li>\n          <li>\n            <Link to='/events'>Events</Link>\n          </li>\n        </ul>\n      </article>\n      <article>\n        <h4 className='footer-header'>Follow me</h4>\n        <ul className='footer-ul'>\n          <li>\n            <a\n              href='https://github.com/jbrearley'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <i className='fab fa-github fa-lg'></i>\n            </a>\n          </li>\n        </ul>\n      </article>\n    </div>\n  </footer>\n);\n\nexport default withRouter(Footer);","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Home from './containers/Home/Home';\nimport Experience from './containers/Experience/Experience';\n// import Projects from './containers/Projects/Projects';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  let routes = (\n    <Switch>\n   \n          <Route path='/experience' component={Experience} />\n          {/* <Route path='/projects' component={Projects} /> */}\n          <Route path='/' exact component={Home} />\n          <Redirect to='/' />\n      \n    </Switch>\n  );\n\n  return (\n    <React.Fragment>\n      <Header />\n      {routes}\n      {/* <Footer /> */}\n    </React.Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}